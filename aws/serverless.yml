# serverless.yml
service: freestyle-judge

provider:
  name: aws
  runtime: nodejs16.x
  region: us-west-2
  stage: ${opt:stage, "development"}

  environment:
    DATA_TABLE: ${self:service}-${self:provider.stage}-dataTable

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DATA_TABLE}"

functions:
  importEventFromPoolCreator:
    handler: source/main.importEventFromPoolCreator
    events:
      - http:
          path: importEventFromPoolCreator/{eventKey}
          method: post
          cors: true
  getEventData:
    handler: source/main.getEventData
    events:
      - http:
          path: getEventData/{eventKey}
          method: get
          cors: true
  getImportantVersion:
    handler: source/main.getImportantVersion
    events:
      - http:
          path: getImportantVersion
          method: get
          cors: true
  updateEventState:
    handler: source/main.updateEventState
    events:
      - http:
          path: updateEventState/{eventKey}
          method: post
          cors: true
  updateJudgeState:
    handler: source/main.updateJudgeState
    events:
      - http:
          path: updateJudgeState/{poolKey}/judgeGuid/{judgeGuid}/teamIndex/{teamIndex}
          method: post
          cors: true

resources:
  Resources:
    dataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DATA_TABLE}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH

